/*
Descripción: PROYECTO FINAL
Fecha: AGOSTO 2022
Equipo:
*Aguilar Brun Mario
*Lizárraga Moreno Ricardo
*Lopez Mora Alan Ignacio
*Meza Borrego Juan Manuel
*Pérez Pérez Joshua Mizraim
*Toledo Becerra Gustavo

 */


package Login;


import Metodos_SQL.Conexion_SQL;
import Ventana_Principales.Ventana_Admin;
import Ventana_Principales.Ventana_Empleados;
import Ventana_Principales.Ventana_Gerente;
import java.sql.PreparedStatement;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.*;
import javax.swing.ImageIcon;
import java.awt.Toolkit;



public class IniciarSesion extends javax.swing.JFrame implements Runnable {
     int xMouse,yMouse;
     String hora,min,seg,ampm;
     Calendar calendario;
     Thread h1;
    private Connection con;
    
   
    
    public IniciarSesion() {
        
        
        initComponents();
        this.setLocationRelativeTo(null);//NOS SIRVE PARA QUE LA VENTA AL EJECUTARLA ESTE CENTRADA AL ABRIRLA
        fechaActual.setText(FechaActual());
        h1 = new Thread(this);
        h1.start();
        setVisible(true);
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Imagenes/icon.png")));
        
        
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Sesion = new javax.swing.JPanel();
        btnIniciar = new javax.swing.JButton();
        txtPass = new javax.swing.JPasswordField();
        txtUser = new javax.swing.JTextField();
        Logo = new javax.swing.JLabel();
        Fondo_Plat = new javax.swing.JLabel();
        Separador_USER = new javax.swing.JSeparator();
        User = new javax.swing.JLabel();
        Separador_Pass = new javax.swing.JSeparator();
        pass = new javax.swing.JLabel();
        MinimizarBtn = new javax.swing.JPanel();
        MinimizarVentana = new javax.swing.JLabel();
        ExitBtn = new javax.swing.JPanel();
        Cerrar = new javax.swing.JLabel();
        Barra_Superior = new javax.swing.JPanel();
        Access = new javax.swing.JLabel();
        fechaActual = new javax.swing.JLabel();
        credencialesAcceso = new javax.swing.JLabel();
        horaActual = new javax.swing.JLabel();
        User_Name1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("LOGIN");
        setLocationByPlatform(true);
        setUndecorated(true);
        setResizable(false);

        Sesion.setBackground(new java.awt.Color(255, 255, 255));
        Sesion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(13, 71, 171)));
        Sesion.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnIniciar.setBackground(new java.awt.Color(13, 71, 171));
        btnIniciar.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        btnIniciar.setForeground(new java.awt.Color(255, 255, 255));
        btnIniciar.setText("Iniciar Sesion");
        btnIniciar.setBorder(null);
        btnIniciar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnIniciar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnIniciarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnIniciarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnIniciarMouseExited(evt);
            }
        });
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });
        Sesion.add(btnIniciar, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 470, 150, 40));

        txtPass.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txtPass.setForeground(new java.awt.Color(204, 204, 204));
        txtPass.setText("********");
        txtPass.setToolTipText("");
        txtPass.setBorder(null);
        txtPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtPassMousePressed(evt);
            }
        });
        txtPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPassActionPerformed(evt);
            }
        });
        txtPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPassKeyPressed(evt);
            }
        });
        Sesion.add(txtPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 410, 430, 20));

        txtUser.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txtUser.setForeground(new java.awt.Color(204, 204, 204));
        txtUser.setText("Ingrese Nombre De Usuario:");
        txtUser.setBorder(null);
        txtUser.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtUserMousePressed(evt);
            }
        });
        txtUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserActionPerformed(evt);
            }
        });
        txtUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUserKeyPressed(evt);
            }
        });
        Sesion.add(txtUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 320, 430, 26));

        Logo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Logo_Tacos.png"))); // NOI18N
        Sesion.add(Logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 200, 220, 210));

        Fondo_Plat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondo.png"))); // NOI18N
        Sesion.add(Fondo_Plat, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 30, 350, 550));
        Sesion.add(Separador_USER, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 350, 430, 20));

        User.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        User.setForeground(new java.awt.Color(13, 71, 171));
        User.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/user(1).png"))); // NOI18N
        User.setText("USUARIO:");
        User.setPreferredSize(new java.awt.Dimension(110, 96));
        Sesion.add(User, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 140, 50));
        Sesion.add(Separador_Pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 430, 430, 10));

        pass.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        pass.setForeground(new java.awt.Color(13, 71, 171));
        pass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/lock.png"))); // NOI18N
        pass.setText("CONTRASEÑA:");
        Sesion.add(pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 180, 60));

        MinimizarBtn.setBackground(new java.awt.Color(255, 255, 255));
        MinimizarBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 255)));

        MinimizarVentana.setFont(new java.awt.Font("Roboto Medium", 0, 36)); // NOI18N
        MinimizarVentana.setForeground(new java.awt.Color(49, 88, 213));
        MinimizarVentana.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        MinimizarVentana.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/chevron-down.png"))); // NOI18N
        MinimizarVentana.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MinimizarVentana.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MinimizarVentanaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MinimizarVentanaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MinimizarVentanaMouseExited(evt);
            }
        });

        javax.swing.GroupLayout MinimizarBtnLayout = new javax.swing.GroupLayout(MinimizarBtn);
        MinimizarBtn.setLayout(MinimizarBtnLayout);
        MinimizarBtnLayout.setHorizontalGroup(
            MinimizarBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
            .addGroup(MinimizarBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(MinimizarBtnLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(MinimizarVentana)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        MinimizarBtnLayout.setVerticalGroup(
            MinimizarBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
            .addGroup(MinimizarBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(MinimizarBtnLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(MinimizarVentana)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        Sesion.add(MinimizarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 0, -1, 30));

        ExitBtn.setBackground(new java.awt.Color(255, 255, 255));
        ExitBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));

        Cerrar.setBackground(new java.awt.Color(255, 255, 255));
        Cerrar.setFont(new java.awt.Font("Roboto Medium", 0, 36)); // NOI18N
        Cerrar.setForeground(new java.awt.Color(49, 88, 213));
        Cerrar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Cerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/x(1).png"))); // NOI18N
        Cerrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Cerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CerrarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CerrarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CerrarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout ExitBtnLayout = new javax.swing.GroupLayout(ExitBtn);
        ExitBtn.setLayout(ExitBtnLayout);
        ExitBtnLayout.setHorizontalGroup(
            ExitBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ExitBtnLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Cerrar))
        );
        ExitBtnLayout.setVerticalGroup(
            ExitBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ExitBtnLayout.createSequentialGroup()
                .addComponent(Cerrar)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        Sesion.add(ExitBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 0, 30, 30));

        Barra_Superior.setBackground(new java.awt.Color(255, 255, 255));
        Barra_Superior.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(49, 88, 213), 1, true));
        Barra_Superior.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                Barra_SuperiorMouseDragged(evt);
            }
        });
        Barra_Superior.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Barra_SuperiorMousePressed(evt);
            }
        });
        Barra_Superior.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Access.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        Access.setText("INICIAR SESION");
        Barra_Superior.add(Access, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 140, 30));

        Sesion.add(Barra_Superior, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 890, 30));

        fechaActual.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        fechaActual.setForeground(new java.awt.Color(51, 51, 51));
        fechaActual.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Sesion.add(fechaActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 500, 160, 30));

        credencialesAcceso.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        credencialesAcceso.setText("INTRODUZCA SUS CREDENCIALES DE ACCESO");
        Sesion.add(credencialesAcceso, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 240, -1, -1));

        horaActual.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        horaActual.setForeground(new java.awt.Color(51, 51, 51));
        horaActual.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Sesion.add(horaActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 540, 160, 30));

        User_Name1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/iconmonstr_User.png"))); // NOI18N
        Sesion.add(User_Name1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, 190, 160));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Sesion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Sesion, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
    
    }//GEN-LAST:event_btnIniciarActionPerformed

    private void txtPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassActionPerformed
    
    private void btnIniciarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnIniciarMouseClicked

        
         

        
         
             //Este Metodo Sirve Para Iniciar Sesion Y nos Envie a La Venta Principal del Administrador
             /*String usuario= "tester";
             String contraseña = "tester";
             
             String Pass = new String(txtPass.getPassword());
             if(txtUser.getText().equals(usuario)&& Pass.equals(contraseña)){
             JOptionPane.showMessageDialog(this, "Bienvenido: Presione OK para continuar");
             Ventana_Admin acceso = new Ventana_Admin();
             acceso.setVisible(true);
             dispose();
             }
             else{
             JOptionPane.showMessageDialog(this, "Usuario o contraseña incorrectos");
             limpiar();
             }*/
             /*boolean validar = conectar();
             if(validar){
                 Ventana_Admin acceso = new Ventana_Admin();
                 acceso.setVisible(true);
                 dispose();
             }
             else{
                 JOptionPane.showMessageDialog(this, "Usuario o contraseña incorrectos");
             }
             txtUser.setText("");
             txtPass.setText("");*/
             //-------------------------------------------------------------------------------
             

            //METODO PARA VALIDAR LOS USUARIOS 
             String user=txtUser.getText();
             String pass=new String(txtPass.getPassword()); 
             String url="select Usuario,Contrasena,Privilegio from empleados where Usuario='"+user+"' ";
            try {
                Connection con = Conexion_SQL.getConnection();
                PreparedStatement ps = con.prepareStatement(url);
                ResultSet rs = ps.executeQuery();
                
                if(rs.next()){
                    String u=rs.getString("Usuario");
                    String p=rs.getString("Contrasena");
                    String pri= rs.getString("Privilegio"); 
                    
                    if(pass.equals(p)){
                    //Nos dirigira a la ventana dependiendo el privilegio
                        if(pri.equals("ADMINISTRADOR")){
                           Ventana_Admin IS = new Ventana_Admin();
                           IS.setVisible(true);
                           IS.Sesion_in.setText("Usuario: "+u);
                           dispose();
                        }else if(pri.equals("GERENTE")){
                            Ventana_Gerente IS = new Ventana_Gerente();
                            IS.Sesion_in.setText("Usuario: "+u);
                            IS.setVisible(true);
                            dispose();
                            
                        }else if(pri.equals("EMPLEADO")){
                            Ventana_Empleados IS = new Ventana_Empleados();
                            IS.setVisible(true);
                            IS.Sesion_in.setText("Usuario: "+u);
                            dispose();
                            
                        }
                    }else{
                    JOptionPane.showMessageDialog(null, "Las Credenciales Son Incorrectaas");
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "El Usuario no Existe");
                    }
                
                
         } catch (SQLException ex) {
                System.out.println(ex.toString());
         } 
          
        
        
    }//GEN-LAST:event_btnIniciarMouseClicked

//GEN-FIRST:event_MinimizarMouseClicked
 
//GEN-LAST:event_MinimizarMouseClicked
//Metodo Para Cerrar La Ventana
    private void CerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CerrarMouseClicked
       System.exit(0);
    }//GEN-LAST:event_CerrarMouseClicked
    //Metodo Para Minimizar
    private void MinimizarVentanaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinimizarVentanaMouseClicked
       minimizarVentana(); 
    }//GEN-LAST:event_MinimizarVentanaMouseClicked
    //Metodo Para Darle Color al Boton De cerrar
    private void CerrarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CerrarMouseEntered
        ExitBtn.setBackground(Color.red);
        Cerrar.setForeground(Color.white);
    }//GEN-LAST:event_CerrarMouseEntered
    //Metodo para Cuando se quite el cursos vuelva al color de antes
    private void CerrarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CerrarMouseExited
        ExitBtn.setBackground(Color.white);
    }//GEN-LAST:event_CerrarMouseExited
    //Este Metodo sirve para darle color cuando entre en el icono de minimizar
    private void MinimizarVentanaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinimizarVentanaMouseEntered
        MinimizarBtn.setBackground(Color.gray);
        MinimizarVentana.setForeground(Color.white);
    }//GEN-LAST:event_MinimizarVentanaMouseEntered
    //Metodo sirve para volver al color actual del Icono Minimizar
    private void MinimizarVentanaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinimizarVentanaMouseExited
        MinimizarBtn.setBackground(Color.white);
    }//GEN-LAST:event_MinimizarVentanaMouseExited
    //Metodo sirve para darle color al boton de inicio de sesion cuando el cursor entra
    private void btnIniciarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnIniciarMouseEntered
        btnIniciar.setBackground(new Color(90,121,220));
    }//GEN-LAST:event_btnIniciarMouseEntered
    //Este metodo sirve para volver al color actual cuando el cursosr sale tomando como referencia el color original
    private void btnIniciarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnIniciarMouseExited
        btnIniciar.setBackground(new Color(33,33,219));
    }//GEN-LAST:event_btnIniciarMouseExited
    //Metodo para que no nos borre el texto cuando cambiamos de campo 
    private void txtUserMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtUserMousePressed
        if(txtUser.getText().equals("Ingrese Nombre De Usuario:")){
        txtUser.setText("");
        txtUser.setForeground(Color.black);
        }
        if(String.valueOf(txtPass.getPassword()).isEmpty()){
        txtPass.setText("********");
        txtPass.setForeground(Color.gray);
        }
        
        
    }//GEN-LAST:event_txtUserMousePressed
    //Metodo para que no nos borre el texto cuando cambiamos de campo 
    private void txtPassMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPassMousePressed
        if(String.valueOf(txtPass.getPassword()).equals("********")){
        txtPass.setText("");
        txtPass.setForeground(Color.black);
        }
        if(txtUser.getText().isEmpty()){
        txtUser.setText("Ingrese Nombre De Usuario:");
        txtUser.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtPassMousePressed
    //Metodo cuando en el campo de usuario si escribimos o presionamos una tecla borre el texto por defecto
    private void txtUserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserKeyPressed
        if(txtUser.getText().equals("Ingrese Nombre De Usuario:")){
        txtUser.setText("");
        txtUser.setForeground(Color.black);
        }
        if(String.valueOf(txtPass.getPassword()).isEmpty()){
        txtPass.setText("********");
        txtPass.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtUserKeyPressed
    //Metodo cuando en el campo de password si escribimos borre el texto por defecto
    private void txtPassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPassKeyPressed
        if(String.valueOf(txtPass.getPassword()).equals("********")){
        txtPass.setText("");
        txtPass.setForeground(Color.black);
        }
        if(txtUser.getText().isEmpty()){
        txtUser.setText("Ingrese Nombre De Usuario:");
        txtUser.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtPassKeyPressed

    //Metodo Para Poder Arrastrar La Ventana
    private void Barra_SuperiorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Barra_SuperiorMousePressed
        xMouse=evt.getX();
        yMouse=evt.getY();
    }//GEN-LAST:event_Barra_SuperiorMousePressed

    //Metodo Para Arrastrar La Ventana
    private void Barra_SuperiorMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Barra_SuperiorMouseDragged
        int x=evt.getXOnScreen();
        int y=evt.getYOnScreen();
        this.setLocation(x-xMouse, y-yMouse);
    }//GEN-LAST:event_Barra_SuperiorMouseDragged

    private void txtUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserActionPerformed
    
   private void limpiar(){//Este Metodo sirve para limpiar en caso de fallar con el inicio de sesion
        txtUser.setText("");
        txtPass.setText("");
    }
    //Sirve Para Minimizar Ventana
    private void minimizarVentana(){
        this.setState(IniciarSesion.ICONIFIED);
    }
    //Metodo que Sirve para mostrar la fecha Actual 
    public static String FechaActual(){
        Date fecha = new Date();
        SimpleDateFormat fechaF = new SimpleDateFormat("dd/MM/YYYY");

        return fechaF.format(fecha);
    }
    //Metodo Conectar con SQL
private boolean conectar(){
        try{
            //Driver driver = new com.mysql.jdbc.Driver();
            java.sql.Driver driver = new com.mysql.jdbc.Driver();
            DriverManager.registerDriver(driver);
            String url = "jdbc:mysql://localhost:3306/taqueria";
            String user= txtUser.getText();
            String password=txtPass.getText();
            con = DriverManager.getConnection(url, user, password);
            return true;
        }catch(SQLException e){
            return false;
        }
    }    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IniciarSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IniciarSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IniciarSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IniciarSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IniciarSesion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Access;
    private javax.swing.JPanel Barra_Superior;
    private javax.swing.JLabel Cerrar;
    private javax.swing.JPanel ExitBtn;
    private javax.swing.JLabel Fondo_Plat;
    private javax.swing.JLabel Logo;
    private javax.swing.JPanel MinimizarBtn;
    private javax.swing.JLabel MinimizarVentana;
    private javax.swing.JSeparator Separador_Pass;
    private javax.swing.JSeparator Separador_USER;
    private javax.swing.JPanel Sesion;
    private javax.swing.JLabel User;
    private javax.swing.JLabel User_Name1;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JLabel credencialesAcceso;
    private javax.swing.JLabel fechaActual;
    private javax.swing.JLabel horaActual;
    private javax.swing.JLabel pass;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        
        Thread curtime = Thread.currentThread();
        
        while(curtime==h1){
        calcular();
        horaActual.setText(hora+":"+min+":"+seg+" "+ampm);
        
        try{
            Thread.sleep(1000);
        }catch(InterruptedException e){}
      }  
    }
    
    private void calcular() {
        Calendar calendario = new GregorianCalendar();
        Date HoraActual1 = new Date();
        
        calendario.setTime(HoraActual1);
        ampm= calendario.get(Calendar.AM_PM)==Calendar.AM?"AM":"PM";
        
        if(ampm.equals("PM")){
            int z=calendario.get(Calendar.HOUR_OF_DAY)-12;
            hora=z>9?""+z:"0"+z;
            //int t=calendario.get(Calendar.HOUR_OF_DAY)>9?""+calendario.get(Calendar.HOUR_OF_DAY):"0"+calendario.get(Calendar.HOUR_OF_DAY);
        }else{
            hora=calendario.get(Calendar.HOUR_OF_DAY)>9?""+calendario.get(Calendar.HOUR_OF_DAY):"0"+calendario.get(Calendar.HOUR_OF_DAY);
        }
        min=calendario.get(Calendar.MINUTE)>9?""+calendario.get(Calendar.MINUTE):"0"+calendario.get(Calendar.MINUTE);
        seg=calendario.get(Calendar.SECOND)>9?""+calendario.get(Calendar.SECOND):"0"+calendario.get(Calendar.SECOND);
                
    }
}
